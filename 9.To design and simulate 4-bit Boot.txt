9.4-bit Booth Multiplier.
VERILOG CODE:
module booth_multi(M, Q, Z); input signed [3:0] M, Q; output signed [7:0] Z;
reg signed [7:0] Z; reg [1:0] temp; integer i;
reg Qnm1; reg [3:0] Y1;
always @ (M, Q) begin
Z = 8'd0; Qnm1 = 1'd0;
for (i = 0; i< 4; i = i + 1) begin
temp = {M[i], Qnm1}; Y1 = - Q;
case (temp)
2'd2 : Z [7 : 4] = Z [7 : 4] + Y1;
2'd1 : Z [7 : 4] = Z [7 : 4] + Q;
default : begin end endcase
Z = Z >> 1; Z[7] = Z[6];
Qnm1 = M[i]; end
if (Q == 4'd8)
begin
Z = - Z;
end end
endmodule

TESTBENCH:

module booth_multi_tb; reg [3:0] M;
reg [3:0] Q;
 
wire [7:0] Z; booth_multiuut (
.M(M),
.Q(Q),
.Z(Z));
initial begin M = 0;
Q = 0;#100; M=-5; Q=7;#100; M=-3; Q=7;#100; M=5; Q=6;#100; M=4; Q=7;#100; M=-2;
Q=-4;#100;
end endmodule
